<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="com.collibra.dgc.war" version="3.0">
	<display-name>Collibra Data Governance Center</display-name>
	
	<!-- Spring configuration -->
	<context-param>
	  <param-name>contextConfigLocation</param-name>
	  <param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>
	
	<listener>
	  <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<servlet>
		<servlet-name>Application</servlet-name>
		<servlet-class>com.collibra.dgc.core.application.Application</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	
	<servlet>
        <servlet-name>resources</servlet-name>
        <servlet-class>
            com.collibra.dgc.ui.core.resources.ResourceServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>resources</servlet-name>
        <url-pattern>/resources/*</url-pattern>
    </servlet-mapping>
	
	<servlet>
        <servlet-name>spring</servlet-name>
        <servlet-class>
            org.springframework.web.servlet.DispatcherServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>spring</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>
   
	<!-- The filter-name matches name of a 'shiroFilter' bean inside applicationContext.xml -->
	<filter>
	    <filter-name>shiroFilter</filter-name>
	    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	    <init-param>
	        <param-name>targetFilterLifecycle</param-name>
	        <param-value>true</param-value>
	    </init-param>
	</filter>	
	
	<filter>
	    <filter-name>shiroLogoutFilter</filter-name>
	    <filter-class>org.apache.shiro.web.filter.authc.LogoutFilter</filter-class>
	</filter>
	
	<!-- Make sure any request you want accessible to Shiro is filtered. /* catches all -->
	<!-- requests.  Usually this filter mapping is defined first (before all others) to -->
	<!-- ensure that Shiro works in subsequent filters in the filter chain:             -->
	<filter-mapping>
	    <filter-name>shiroFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
	    <filter-name>shiroLogoutFilter</filter-name>
	    <url-pattern>/logout</url-pattern>
	</filter-mapping>
	
	<filter>
	    <filter-name>initializeFilter</filter-name>
	    <filter-class>com.collibra.dgc.ui.core.filter.InitializeRedirectFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>initializeFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Configuration for Jersey Web Services starts here -->
	<servlet>
		<servlet-name>jersey</servlet-name>
		<!-- use the spring integration from Jersey -->
		<servlet-class>com.collibra.dgc.rest.core.DGCJerseyServlet</servlet-class>
		<init-param>
			<param-name>com.sun.jersey.config.property.packages</param-name>
			<!-- The package in which the Resource classes located -->
			<param-value>com.collibra.dgc.rest.core</param-value>
		</init-param>
		<init-param>
         <param-name>com.sun.jersey.config.property.MediaTypeMappings</param-name>
         <param-value>xml : application/xml, json : application/json</param-value>
     	</init-param>
		<init-param>
			<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
         <param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
         <param-value>com.collibra.dgc.rest.core.filter.LicenseContainerFilter</param-value>
     	</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>jersey</servlet-name>
		<!-- Enables us to access the WS by pointing your browser to this URL : 
			http://localhost:8080/any_name/rest/{service-path} -->
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>
	
	<!-- Rewrite rule for the mapping the 'latest' of the REST interface to the corresponding version. -->
	<filter>
		<filter-name>UrlRewriteFilter</filter-name>
		<filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
		<init-param>
            <param-name>modRewriteConfText</param-name>
            <param-value>
			    RewriteRule  ^/rest/latest/(.*)$      /rest/1.0/$1  [L, NC] 
            </param-value>
        </init-param>
	</filter>
	<filter-mapping>
		<filter-name>UrlRewriteFilter</filter-name>
		<url-pattern>/rest/latest/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>

	<!-- Configuration for Jersey Web Services ends here -->

</web-app>
