<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx 
     	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:annotation-config />
	<context:component-scan base-package="com.collibra" />

	<bean id="dataSourceFactory" class="com.collibra.dgc.core.application.DGCDataSourceFactory" />

	<bean id="dgcDataSource" factory-bean="dataSourceFactory"
		factory-method="createDataSource" />

	<bean id="dgcSessionFactory" class="com.collibra.dgc.core.application.DGCSessionFactory" />

	<bean id="dgcTxManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="dgcSessionFactory" />
	</bean>

	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="dgcTxManager" />

	<bean id="dgcWorkflowFactory" class="com.collibra.dgc.core.application.DGCWorkflowFactory"
		destroy-method="destroy" />
	<bean id="processEngine" factory-bean="dgcWorkflowFactory"
		factory-method="createEngine" />
	
	<bean id="shiroFilter"
		class="com.collibra.dgc.core.application.DGCShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/" />
		<property name="unauthorizedUrl" value="/unauthorized" />
		<!-- The 'filters' property is not necessary since any declared javax.servlet.Filter 
			bean -->
		<!-- defined will be automatically acquired and available via its beanName 
			in chain -->
		<!-- definitions, but you can perform instance overrides or name aliases 
			here if you like: -->
		<!-- <property name="filters"> <util:map> <entry key="anAlias" value-ref="someFilter"/> 
			</util:map> </property> -->
	</bean>
	
	<bean id="concurrentUsersService"
		class="com.collibra.dgc.core.service.impl.ConcurrentUsersServiceImpl"></bean>

	<bean id="authenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
		<property name="authenticationListeners">
			<list>
				<ref bean="concurrentUsersService" />
			</list>
		</property>
		<property name="realms">
			<list>
				<ref bean="dgcRealm" />
			</list>
		</property>
	</bean>

	<!-- Needed because later this bean is autowired into com.collibra.dgc.core.service.impl.ConcurrentUsersServiceImpl -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- Session timeout in miliseconds 60 000 = 1 minute -->
		<property name="globalSessionTimeout" value="60000" />
	</bean>

	<bean id="rememberMeManager"
		class="com.collibra.dgc.core.security.authentication.DGCCookieRememberMeManager">
		<property name="rememberMeLoginListeners">
			<list>
				<ref bean="concurrentUsersService" />
			</list>
		</property>
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- Single realm app. If you have multiple realms, use the 'realms' property 
			instead. -->
		<property name="sessionManager" ref="sessionManager" />
		<property name="realm" ref="dgcRealm" />
		<property name="authenticator" ref="authenticator" />
		<property name="rememberMeManager" ref="rememberMeManager" />
		<!-- By default the servlet container sessions will be used. Uncomment 
			this line to use shiro's native sessions (see the JavaDoc for more): -->
		<!-- <property name="sessionMode" value="native"/> -->
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<bean id="dgcRealmFactoryBean" class="com.collibra.dgc.core.application.DGCRealmFactory" />
	<bean id="dgcRealm" factory-bean="dgcRealmFactoryBean"
		factory-method="createRealm">
	</bean>


	<bean name="licenseValidator" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.collibra.dgc.core.license.LicenseValidatorJob" />
	</bean>
	
	<bean id="cronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="licenseValidator" />
		<!-- run every morning at 1 AM -->
		<property name="cronExpression" value="0 0 1 * * ?" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="cronTrigger" />
			</list>
		</property>
	</bean>
</beans>